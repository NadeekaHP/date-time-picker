'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
opyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
nc. licenses this file to you under the Apache License,
ersion 2.0 (the "License"); you may not use this file except
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  in compliance with the License.
ou may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
nless required by applicable law or agreed to in writing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  software distributed under the License is distributed on an

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  KIND, either express or implied.  See the License for the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  specific language governing permissions and limitations
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var SESSION_USER = 'DASHBOARD_USER';

/**
 * Widget base class.
 */

var Widget = function (_Component) {
    _inherits(Widget, _Component);

    function Widget(props) {
        _classCallCheck(this, Widget);

        var _this = _possibleConstructorReturn(this, (Widget.__proto__ || Object.getPrototypeOf(Widget)).call(this, props));

        _this.messageQueue = [];
        _this.props.glContainer.layoutManager.on('initialised', _this.publishQueuedMessages);

        _this._getLocalState = _this._getLocalState.bind(_this);
        _this._setLocalState = _this._setLocalState.bind(_this);
        _this.getWidgetState = _this.getWidgetState.bind(_this);
        _this.setWidgetState = _this.setWidgetState.bind(_this);
        _this.subscribe = _this.subscribe.bind(_this);
        _this.publishQueuedMessages = _this.publishQueuedMessages.bind(_this);
        return _this;
    }

    /**
     * This method publishers the queued messages in the widget. The messages are queued when the widget tried to
     * publish before initializing the dashboard.
     *
     */


    _createClass(Widget, [{
        key: 'publishQueuedMessages',
        value: function publishQueuedMessages() {
            for (var messageId in this.messageQueue) {
                this.publish(this.messageQueue[messageId]);
            }
        }

        /**
         * This method is called by subscriber widget to set the listener callback.
         * @param listnerCallback
         */

    }, {
        key: 'subscribe',
        value: function subscribe(listenerCallback) {
            this.props.glEventHub.on(this.props.id, listenerCallback);
        }

        /**
         * This method is called by publisher widget to publish messages.
         * @param listnerCallback
         */

    }, {
        key: 'publish',
        value: function publish(message) {
            var publishedChannel = this.props.id;
            if (!this.props.glContainer.layoutManager.isInitialised) {
                this.messageQueue.push(message);
            } else {
                this.props.glEventHub.emit(publishedChannel, message);
            }
        }

        /**
         * Build state object from the browser hash.
         * 
         * @return {{}} State
         */

    }, {
        key: '_getLocalState',


        /**
         * Get local widget state.
         * 
         * @return {{}} State
         */
        value: function _getLocalState() {
            var states = Widget._getStateObject();
            return Object.prototype.hasOwnProperty.call(states, this.props.id) ? states[this.props.id] : {};
        }

        /**
         * Set local widget state.
         * 
         * @param {{}} state State
         */

    }, {
        key: '_setLocalState',
        value: function _setLocalState(state) {
            var states = Widget._getStateObject();
            states[this.props.id] = state;
            Widget._setStateObject(states);
        }

        /**
         * Get widget state.
         * 
         * @param {string} key Key
         * @return {{}} State
         */

    }, {
        key: 'getWidgetState',
        value: function getWidgetState(key) {
            var state = this._getLocalState();
            return Object.prototype.hasOwnProperty.call(state, key) ? state[key] : null;
        }

        /**
         * Set widget state.
         * 
         * @param {string} key State key
         * @param {{}} value State value
         */

    }, {
        key: 'setWidgetState',
        value: function setWidgetState(key, value) {
            var state = this._getLocalState();
            state[key] = value;
            this._setLocalState(state);
        }

        /**
         * Get current user.
         * 
         * @return {{}} User object
         */

    }, {
        key: 'getCurrentUser',
        value: function getCurrentUser() {
            var user = JSON.parse(Widget._getSessionCookie(SESSION_USER));
            return {
                username: user && user.username ? user.username : null
            };
        }
    }], [{
        key: '_getStateObject',
        value: function _getStateObject() {
            // De-serialize the object in suitable format
            return window.location.hash === '' || window.location.hash === '#' ? {} : JSON.parse(window.location.hash.substr(1));
        }

        /**
         * Set state object in the browser hash.
         * 
         * @param {{}} state State
         */

    }, {
        key: '_setStateObject',
        value: function _setStateObject(state) {
            // Serialize the object in suitable format
            window.location.hash = JSON.stringify(state);
        }

        /**
         * Get session cookie by name.
         *
         * @param {string} name Name of the cookie
         * @returns {string} Content
         */

    }, {
        key: '_getSessionCookie',
        value: function _getSessionCookie(name) {
            name = name + '=';
            var arr = document.cookie.split(';');
            for (var i = 0; i < arr.length; i++) {
                var c = arr[i];
                while (c.charAt(0) === ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) === 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return '';
        }
    }]);

    return Widget;
}(_react.Component);

exports.default = Widget;